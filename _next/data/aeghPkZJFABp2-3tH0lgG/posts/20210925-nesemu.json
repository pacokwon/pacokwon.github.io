{"pageProps":{"post":{"id":"20210925-nesemu","content":"\n## WIP\n\n- [x] define instruction array for 6502\n- [x] implement addressing mode\n- [ ] implement instructions\n\n### Update - 20210927\n\nopcode가 한 byte라서 가지수가 256개다. 모두 사용되지는 않지만 opcode를 배열의 index로 사용할 예정이라 길이 256짜리 배열을 정의해야 했다. 아직 정확하게 적었는지는 모른다.\n\n구조를 짜는데 좀 어려움을 겪었다. Chip-8과는 다르게 제대로 된 CPU인지라 instruction 개수가 상당히 많은데, 모두 CPU struct 안에 구현하려니 다른 함수들과 섞여 들어가는 것이 마음에 안 들었다. 결국에는 instruction이랑 addressing mode에 필요한 기능들을 각각 분리하여 trait로 만들고 CPU struct가 implement하게 만들었다. 분리 효과는 있지만 trait가 하나의 구현체만을 위해 선언해둔 상태라 약간 걸리긴 한다. 그냥 trait를 없애고 함수만 각자 파일에서 구현하는게 좋으려나?\n\n## Resources\n\nOpcodes:\n\n- http://oxyron.de/html/opcodes02.html\n- http://www.6502.org/tutorials/6502opcodes.html\n- https://www.masswerk.at/6502/6502_instruction_set.html\n\nAbout the NES and its architecture:\n\n- https://www.copetti.org/writings/consoles/nes/\n- https://skilldrick.github.io/easy6502/\n- https://bugzmanov.github.io/nes_ebook/chapter_1.html\n","title":"Building an NES Emulator in Rust","tags":["rust","emulator"],"date":"2021-09-25"}},"__N_SSG":true}